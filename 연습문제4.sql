/*
    날짜 : 2025/07/23
    이름 : 이민준
    내용 : 연습문제4
*/

--실습1
--실습2
create table member(
    memver_Id number(4) primary key,
    name varchar2(40) not null,
    address varchar2(40),
    hp varchar(13) UNIQUE,
    join_date date not null
    );

create table Book(
    book_Id number(5) primary key,
    title varchar2(50) not null,
    author varchar2(40) not null,
    publisher varchar2(40) not null,
    available varchar(1),
    reg_date date not null
    );
    
create table Loan(
    loan_Id number GENERATED by DEFAULT as IDENTITY primary key,
    member_Id number(4) not null,
    book_Id number(5),
    loan_date date ,
    return_date date ,
    actual_date date 
    );
--실습3
insert into member VALUES( 1001, '김유신', '서울특별시 강남구 역삼동', '010-1234-1001', '2024-01-10 09:15:00');
insert into member VALUES( 1002, '김춘추', '대전광역시 유성구 장대동', '010-1234-1002', '2024-02-14 14:30:00');
insert into member VALUES( 1003, '장보고', '대구광역시 수성구 반월동', '010-1234-1003', '2024-03-01 11:05:00');
insert into member VALUES( 1004, '강감찬', '부산광역시 금정구 부곡동', '010-1234-1004', '2024-03-22 16:40:00');
insert into member VALUES( 1005, '이순신', '광주광역시 광산구 우산동', '010-1234-1005', '2024-04-10 08:50:00');

insert into book VALUES( 10001, '태백산맥', '조정래', '문학수첩','Y','2024-04-10 08:50:00');
insert into book VALUES( 10002, '데미안', '헤르만 헤세', '민음사','N','2024-02-14 14:30:45');
insert into book VALUES( 10003, '토지', '박경리', '문학사상사','Y','2024-03-01 11:05:20');
insert into book VALUES( 10004, '명품 자바 프로그래밍', '제임스 고슬링', '한빛출판사','Y','2024-03-22 16:40:00');
insert into book VALUES( 10005, '로미오와 줄리엣', '세익스피어', '열린책들','N','2024-04-10 08:50:10');
insert into book VALUES( 10006, '삼국지', '나관중', '민음사','Y','2024-04-05 09:12:02');
insert into book VALUES( 10007, '칼의 노래', '김훈', '문학동네','Y','2024-06-10 12:53:17');
insert into book VALUES( 10008, '데이터베이스', '래리 엘리슨', '한빛출판사','N','2024-02-03 10:13:09');
insert into book VALUES( 10009, 'Linux 운영체제', '리누스 토발즈', '한빛출판사','Y','2024-03-11 11:23:43');
insert into book VALUES( 10010, '어린왕자', '생텍쥐베리', '열린책들','Y','2024-01-03 15:27:21');

-- 1번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1001, 10002, TO_DATE('2024-03-01 10:02:31', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-15 10:02:31', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-13 09:44:19', 'YYYY-MM-DD HH24:MI:SS'));
-- 2번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1002, 10004, TO_DATE('2024-03-05 15:10:02', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-19 15:10:02', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-03-12 17:12:30', 'YYYY-MM-DD HH24:MI:SS'));
-- 3번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1003, 10008, TO_DATE('2024-04-01 11:01:12', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-15 11:01:12', 'YYYY-MM-DD HH24:MI:SS'), NULL);
-- 4번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1002, 10001, TO_DATE('2024-04-10 14:32:01', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-24 14:32:01', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-22 13:56:32', 'YYYY-MM-DD HH24:MI:SS'));
-- 5번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1005, 10004, TO_DATE('2024-04-15 16:24:21', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-04-29 16:24:21', 'YYYY-MM-DD HH24:MI:SS'), NULL);
-- 6번 데이터 (날짜 형식 추정하여 수정)
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1004, 10006, TO_DATE('2024-01-05 09:12:09', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-15 09:12:09', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-14 09:21:27', 'YYYY-MM-DD HH24:MI:SS'));
-- 7번 데이터 (날짜 형식 추정하여 수정)
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1001, 10007, TO_DATE('2024-01-07 13:51:07', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-17 13:51:07', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-05-16 14:05:10', 'YYYY-MM-DD HH24:MI:SS'));
-- 8번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1003, 10009, TO_DATE('2024-06-01 11:15:43', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-06-15 11:15:43', 'YYYY-MM-DD HH24:MI:SS'), NULL);
-- 9번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1004, 10004, TO_DATE('2024-06-02 12:30:52', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-06-16 12:30:52', 'YYYY-MM-DD HH24:MI:SS'), NULL);
-- 10번 데이터
INSERT INTO Loan (member_Id, book_Id, loan_date, return_date, actual_date) VALUES (1002, 10008, TO_DATE('2024-06-05 10:06:17', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2024-06-19 10:06:17', 'YYYY-MM-DD HH24:MI:SS'), NULL);

--실습4
select * from member;

--실습5
select title, author from book;

--실습6
select name, address from member
where address like '부산%';

--실습7
select title from book
where available = 'Y';

--실습8
select * from book
where book_id = 10005;

--실습9
select member_id, name, hp
from member where member_id = 1002;

--실습10
select title
from book
where reg_date like '2014-03%';

--실습11
select title, author, publisher
from book
where publisher = '민음사';

--실습12
select loan_id, member_id, book_id
from loan
where actual_date is null;

--실습13
select member_id, name, address, hp, join_date
from member
where name like '김%';

--실습14
select name, address
from member
where address like '부산%' or address like '대구%';

--실습15
select book_id, title
from book
where book_id in(10003, 10006);

--실습16
select title, author
from book
where author in('조정래', '박경리');

--실습17
select name, join_date
from member
where join_date <= '2024-04-01';

--실습18
select loan_id, member_id, book_id, loan_date
from loan
where loan_date >= '2024-05-01';

--실습19
select title, author, publisher
from book
where available = 'N';

--실습20
select *
from book
where title like '%자바%';

--실습21
select name, hp
from member
where hp not in('010-1234-1003');

--실습22
select loan_id, member_id, book_id
from loan
where actual_date <= '2024-03-20';

--실습23
select *
from member
order by name;

--실습24
select title, reg_date
from book
ORDER by reg_date desc;

--실습25
select title
from book
order by title
FETCH first 3 rows only;

--실습26
select *
from member
where join_date = (
select max(join_date)
from member);

--실습27
select loan_id, loan_date
from loan
order by loan_date
FETCH first 2 rows only;

--실습28
select count(*)
from member;

--실습29
select count(*)
from book;

--실습30
select count(*)
from book
where available = 'Y';

--실습31
select publisher, count(*) as 출판_도서수
from book
group by publisher;

--실습32
select count(*)
from loan
where loan_date like '2024%';

--실습33
select member_id, count(*) as 대출_도서수
from loan
group by member_id;

--실습34
select book_id, count(*) as 대출_횟수
from loan
group by book_id;

--실습35
select member_id, count(*) as 회원_대출건수
from loan
group by member_id
HAVING count(*) >= 2;

--실습36
select book_id, count(*) as 회원_대출건수
from loan
group by book_id
HAVING count(*) >= 2;

--실습37
select m.member_id, name, l.book_id, b.title, loan_date
from member m
join loan l
on m.member_id = l.member_id
join book b
on b.book_id = l.book_id;

--실습38
select name, count(*) as 대출건수
from member m
join loan l on m.member_id = l.member_id
group by name
having count(*) >=3;

--실습39
select loan_id, name, title, loan_date
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where extract(month from loan_date) < 5;

--실습40
select title
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where m.name = '김유신';

--실습41
select name
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where b.title = '태백산맥';

--실습42
select name, title
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where m.name = '김춘추'
order by title;

--실습43
select title, name
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where to_char(loan_date, 'YYYYMM') = 202404;

--실습44
select name, title
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where actual_date is null;

--실습45
select name, title
from member m
join loan l on m.member_id = l.member_id
join book b on b.book_id = l.book_id
where author = '조정래';

--실습46
select book_id, title
from book
where book_id not in (
    select b.book_id
    from loan l
    join book b on b.book_id = l.book_id);

--실습47
select name, count(*) as 총_건수
from member m
join loan l on m.member_id = l.member_id
group by name
order by 총_건수 desc;

--실습48
select name
from member
where member_id = (
    select member_id
    from loan
    group by member_id
    order by count(*) desc
    FETCH first 1 rows only);

--실습49
select title
from book
where title != '데이터베이스' and
publisher = (
    select publisher
    from book
    where title ='데이터베이스');

--실습50
select name
from member
where member_id in (
    select member_id
    from loan
    where book_id = 10004);





