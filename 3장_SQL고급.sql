/*
    날짜 : 2025.07.15.
    이름 : 이민준
    내용 : 3장 SQL 고급
*/

-- 실습하기 3-1. 테이블 생성 및 데이터 입력
create table EMP(
    empno number(4) primary key,
    name varchar2(10) not null,
    gender char(1) not null,
    job varchar(10) not null,
    depno number(2) ,
    regdate date not null
    );

create table DEPT(
    DEPTNO number(2) primary key,
    DNAME varchar2(10) not null,
    DTEL varchar2(12) not null
    );
    
create table SALE(
    NO number GENERATED by DEFAULT as IDENTITY primary key ,
    EMPNO number(4) not null,
    YEAR number(4) not null,
    MONTH number(2) not null,
    PRICE number(10) not null
    );


// 직원테이블데이터입력
INSERT INTO EMP VALUES (1001, '김유신', 'M', '사원', 10, SYSDATE);
INSERT INTO EMP VALUES (1002, '김춘추', 'M', '대리', 20, SYSDATE);
INSERT INTO EMP VALUES (1003, '장보고', 'M', '과장', 10, SYSDATE);
INSERT INTO EMP VALUES (1004, '강감찬', 'M', '부장', 30, SYSDATE);
INSERT INTO EMP VALUES (1005, '신사임당', 'F', '대리', 20, SYSDATE);
iNSERT INTO EMP VALUES (1006, '이황', 'M', '사원', 40, SYSDATE);
INSERT INTO EMP VALUES (1007, '이이', 'M', '과장', 20, SYSDATE);
INSERT INTO EMP VALUES (1008, '이순신', 'M', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1009, '허난설헌', 'F', '사원', NULL, SYSDATE);
INSERT INTO EMP VALUES (1010, '정약용', 'M', '대리', 50, SYSDATE);

// 부서테이블데이터입력
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (10, '영업1부', '051-511-1000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (20, '영업2부', '051-511-2000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (30, '영업3부', '051-511-3000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (40, '영업4부', '051-511-4000');
INSERT INTO DEPT (DEPTNO, DNAME, DTEL) VALUES (50, '영업지원부', '051-511-5000');

 // 매출테이블데이터입력
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 1,  98100);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 1, 136000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 1,  80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2023, 1,  78000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 1,   NULL);

INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2023, 2,  23500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2023, 2, 126000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2023, 2,  18500);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2023, 2,  19000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1010, 2023, 2,  53000);

INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1001, 2024, 1,  24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 1, 109000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 1,  80000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 1,   NULL);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1007, 2024, 1,  24000);

INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1002, 2024, 2, 160000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1003, 2024, 2, 101000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1004, 2024, 2,  43000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1005, 2024, 2,  24000);
INSERT INTO SALE (EMPNO, YEAR, MONTH, PRICE) VALUES (1006, 2024, 2, 109000);

select * from emp where name <> '김춘추';

select * from emp where job in('사원','대리');
select * from emp where name like '김%';
select * from emp where name like '%신';
select * from emp where name like '이_';
select * from emp where name like '이__';
//select * from emp where hp like '010-1111%';
select * from emp where depno is null;
select * from dept where deptno = 10;
select * from dept where dname = '영업지원부';
select * from dept where deptno in (10, 30);
select * from sale where price > 50000;
select * from sale where price >= 50000 and price < 100000 and month = 1;
select * from sale where price between 50000 and 100000;
select * from sale where price not between 50000 and 100000;
select * from sale where year = 2024;
select * from sale where year = 2024 and month = 2;
select * from sale where month in (1,2);
select * from emp where name like '_순%';
select * from dept where dtel like '%30%';

-- 실습하기 2-2. 데이터 조회 정렬과 조회 개수 제한
select * from sale;
select * from sale order by price;
select * from sale order by price asc;
select * from sale order by price desc;
select * from emp order by name;
select * from emp order by name desc;
select * from emp order by regdate asc;

select * from sale where price > 50000 order by price desc;
select * from sale
where price > 50000
order by year, month, price desc;

select * from sale fetch first 3 rows only;
select * from sale offset 0 rows fetch next 3 rows only;
select * from sale offset 1 rows fetch next 2 rows only;
select * from sale offset 5 rows fetch next 3 rows only;
select * from sale order by price desc offset 3 rows fetch next 5 rows only;
select * from sale
where price < 50000
order by price desc
fetch first 3 rows only;

select * from sale
where price > 50000
order by year desc, month, price desc
fetch first 5 rows only;

-- 실습하기 2-3
select distinct depno from emp;
select distinct job, depno from emp;

select empno as 사번, name as 이름, gender as 성별 from emp;

select empno e, name n, gender g from emp;


select SUM(price) as 합계 from sale;
select count(*) as 직원수 from emp;
select count(empno) as 직원수 from emp;
select count(depno) as 부서수 from emp;

select ceil(1.2) from dual; // 올림
select ceil(1.8) from dual;
select floor(1.2) from dual; // 내림
select floor(1.8) from dual;
select round(1.2) from dual; // 반올림
select round(1.8) from dual;

select dbms_random.value from dual;
select ceil(dbms_random.value*10) from dual;

select 'Hello Oracle!', length('Hello Oracle!') from dual;
select 'Hello Oracle!', substr('Hello Oracle!', 1, 3),
substr('Hello Oracle!', 3, 2),
substr('Hello Oracle!', 5)
from dual;


select 
instr('Hello Oracle!', 'l') as instr_1,
instr('Hello Oracle!', 'l', -1) as instr_2
from dual;

select '010-2109-8237', replace('010-2109-8237','-','') from dual;
select lpad('Oracle', 10, '#') as lpad, rpad('Oracle', 10, '*') as rpad from dual;

select concat (empno, name) from emp where name = '이순신';
select empno || name from emp where name = '정약용';

select '[ _Oracle_ ]' as before, '[' || trim(' _Oracle_ ') || ']' as trim from dual;


select add_months(sysdate, 1),
add_months(sysdate, -1)
from dual;

select months_between(date '2025-07-13', date '2024-07-13') as 개월차
from dual;

select next_day(sysdate, '월요일') as 다음_월요일
from dual;

-- 실습하기 3-4

select 
to_char(sysdate, 'yyyy') as yyyy,
to_char(sysdate, 'mm') as mm,
to_char(sysdate, 'dd') as dd,
to_char(sysdate, 'hh24') as hh24,
to_char(sysdate, 'mi') as mi,
to_char(sysdate, 'ss') as ss,
to_char(sysdate, 'yyyy/mm/dd hh24:mi:ss') as 날짜시간
from dual;

insert into emp values (1011, '안중근', 'M', '부장', 30, to_char(sysdate, 'yyyy/mm/dd'));
insert into emp values (1012, '이민준', 'M', '사원', 26, to_char(sysdate));

select 
to_date('20250714', 'yyyy/mm/dd') as 날짜1,
to_date('250714', 'yy-mm-dd') as 날짜2,
to_date(sysdate, 'yyyy/mm/dd hh24:mi:ss') as 날짜시간
from dual;


insert into emp values (1013, '유관순', 'F', '차장', 20, sysdate);
insert into emp values (1014, '윤봉길', 'M', '과장', 30, to_date(sysdate, 'yyyy-mm-dd hh24:mi:ss'));

select no, empno, year, month, nvl(price, 0)
from sale;

select empno, name, gender, job, nvl2(depno, '정규직', '비정규직')
from emp;

-- 그룹화
select empno from sale group by empno;
select year from sale group by year;
select empno, year from sale group by empno, year;
select empno, count(*) as 판매건수 from sale group by empno;
select empno, sum(price) as 합계 from sale group by empno order by empno;
select empno, avg(price) as 평균 from sale group by empno order by empno;

select empno, year, sum(price) as 합계 from sale
group by empno, year
order by empno, year;

select empno, year, sum(price) as 합계
from sale
group by empno, year
order by year, 합계 desc;

select empno, year, sum(price) as 합계
from sale
where price >= 100000
group by empno, year
having sum(price) >= 200000
order by 합계 desc;

-- 실습하기 5-1
select empno, month, price from sale where year = 2023
union
select empno, month, price from sale where year = 2024;

select empno, month, price from sale where year = 2023
union all
select empno, month, price from sale where year = 2024;

select empno, year, sum(price) as 합계
from sale
where year = 2023
group by empno, year
union
select empno, year, sum(price) as 합계
from sale
where year = 2024
group by empno, year
order by year asc, 합계 desc;

select * from emp e join dept d on e.depno = d.deptno;

select * from emp e join dept d using (deptno); -- 컬럼명 같아야 함

select * from emp e, dept d where e.depno = d.deptno;

select s.no, s.empno, e.name, e.job, e.regdate, e.depno, d.dname
from sale s
join emp e on s.empno = e.empno
join dept d on e.depno = d.deptno
where price > 100000 and year = 2024
order by s.price desc;

delete from emp where empno = 1006;

select * from sale s
left join emp e on s.empno = e.empno;

select * from sale s
right join emp e on s.empno = e.empno;















